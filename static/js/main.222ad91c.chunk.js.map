{"version":3,"sources":["gameHelpers.js","conmponents/Styles/StyledTetris.js","m.mp3","tetrominos.js","hooks/useStage.js","conmponents/Styles/StyledStage.js","conmponents/Styles/StyledCell.js","conmponents/Cell.js","conmponents/Stage.js","conmponents/Styles/StyledDisplay.js","conmponents/Display.js","conmponents/Styles/StyledStartButton.js","conmponents/StartButton.js","conmponents/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","Cell","React","memo","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","play","updatePlay","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","console","log","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","src","soundfile","playing","App","className","resize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.222ad91c.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear']),\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // We shouldn't go through the bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n","import styled from \"styled-components\";\n\nexport const StyledTetrisWrapper = styled.div`\n\twidth: 100vw;\n\theight: 100vh;\n\tbackground: rgba(0, 0, 0, 0);\n\tbackground-size: cover;\n\toverflow: hidden;\n\tz-index: 100;\n\t@media (max-width: 1000px) {\n\t\tdisplay: none;\n\t}\n`;\n\nexport const StyledTetris = styled.div`\n\tdisplay: flex;\n\talign-items: flex-start;\n\tz-index: 100;\n\n\tpadding: 40px;\n\tmargin: 0 auto;\n\tmax-width: 900px;\n\tpadding-left: 17vw;\n\tbackground: white;\n\n\taside {\n\t\twidth: 100%;\n\t\tmax-width: 200px;\n\t\tdisplay: block;\n\t\tpadding: 0 20px;\n\t\tz-index: 100;\n\n\t\t@media (max-width: 1500px) {\n\t\t\tpadding-left: 300px;\n\t\t}\n\t}\n`;\n","export default __webpack_public_path__ + \"static/media/m.a0a01a7e.mp3\";","export const TETROMINOS = {\n\t0: { shape: [[0]], color: \"0, 0, 0\" },\n\tI: {\n\t\tshape: [\n\t\t\t[0, \"I\", 0, 0],\n\t\t\t[0, \"I\", 0, 0],\n\t\t\t[0, \"I\", 0, 0],\n\t\t\t[0, \"I\", 0, 0],\n\t\t],\n\t\tcolor: \"80, 227, 230\",\n\t},\n\tJ: {\n\t\tshape: [\n\t\t\t[0, \"J\", 0],\n\t\t\t[0, \"J\", 0],\n\t\t\t[\"J\", \"J\", 0],\n\t\t],\n\t\tcolor: \"36, 95, 223\",\n\t},\n\tL: {\n\t\tshape: [\n\t\t\t[0, \"L\", 0],\n\t\t\t[0, \"L\", 0],\n\t\t\t[0, \"L\", \"L\"],\n\t\t],\n\t\tcolor: \"223, 173, 36\",\n\t},\n\tO: {\n\t\tshape: [\n\t\t\t[\"O\", \"O\"],\n\t\t\t[\"O\", \"O\"],\n\t\t],\n\t\tcolor: \"223, 217, 36\",\n\t},\n\tS: {\n\t\tshape: [\n\t\t\t[0, \"S\", \"S\"],\n\t\t\t[\"S\", \"S\", 0],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\tcolor: \"48, 211, 56\",\n\t},\n\tT: {\n\t\tshape: [\n\t\t\t[0, 0, 0],\n\t\t\t[\"T\", \"T\", \"T\"],\n\t\t\t[0, \"T\", 0],\n\t\t],\n\t\tcolor: \"132, 61, 198\",\n\t},\n\tZ: {\n\t\tshape: [\n\t\t\t[\"Z\", \"Z\", 0],\n\t\t\t[0, \"Z\", \"Z\"],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\tcolor: \"227, 78, 78\",\n\t},\n};\n\nexport const randomTetromino = () => {\n\tconst tetrominos = \"IJLOSTZ\";\n\tconst randTetromino =\n\t\ttetrominos[Math.floor(Math.random() * tetrominos.length)];\n\treturn TETROMINOS[randTetromino];\n};\n","import { useState, useEffect } from \"react\";\nimport { createStage } from \"../gameHelpers\";\n\nexport const useStage = (player, resetPlayer) => {\n\tconst [stage, setStage] = useState(createStage());\n\tconst [rowsCleared, setRowsCleared] = useState(0);\n\tuseEffect(() => {\n\t\tsetRowsCleared(0);\n\t\tconst sweepRows = (newStage) =>\n\t\t\tnewStage.reduce((ack, row) => {\n\t\t\t\tif (row.findIndex((cell) => cell[0] === 0) === -1) {\n\t\t\t\t\tsetRowsCleared((prev) => prev + 1);\n\t\t\t\t\tack.unshift(\n\t\t\t\t\t\tnew Array(newStage[0].length).fill([0, \"clear\"])\n\t\t\t\t\t);\n\t\t\t\t\treturn ack;\n\t\t\t\t}\n\t\t\t\tack.push(row);\n\t\t\t\treturn ack;\n\t\t\t}, []);\n\t\tconst updateStage = (prevStage) => {\n\t\t\t// First flush the stage\n\t\t\tconst newStage = prevStage.map((row) =>\n\t\t\t\trow.map((cell) => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\n\t\t\t);\n\n\t\t\t// Then draw the tetromino\n\t\t\tplayer.tetromino.forEach((row, y) => {\n\t\t\t\trow.forEach((value, x) => {\n\t\t\t\t\tif (value !== 0) {\n\t\t\t\t\t\tnewStage[y + player.pos.y][x + player.pos.x] = [\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t`${player.collided ? \"merged\" : \"clear\"}`,\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t// Then check if we collided\n\t\t\tif (player.collided) {\n\t\t\t\tresetPlayer();\n\t\t\t\treturn sweepRows(newStage);\n\t\t\t}\n\t\t\treturn newStage;\n\t\t};\n\n\t\tsetStage((prev) => updateStage(prev));\n\t}, [player, resetPlayer]);\n\n\treturn [stage, setStage, rowsCleared];\n};\n","import styled from \"styled-components\";\n\nexport const StyledStage = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: repeat(\n\t\t${(props) => props.height},\n\t\tcalc(25vw / ${(props) => props.width})\n\t);\n\tgrid-template-columns: repeat(${(props) => props.width}, 3fr);\n\tgrid-gap: 2px;\n\tborder: 2px solid #333;\n\twidth: 100%;\n\tmax-width: 25vw;\n\tbackground: #111;\n\tz-index: 100;\n\t@media (max-width: 1500px) {\n\t\tmargin-top: 10%;\n\t\ttransform: scale(1.2);\n\t}\n\t@media (max-width: 1000px) {\n\t\tmargin-top: 20%;\n\t\tmargin-left: 20vw;\n\t\ttransform: scale(1.6);\n\t}\n`;\n","import styled from \"styled-components\";\n\nexport const StyledCell = styled.div`\n\twidth: auto;\n\tbackground: rgba(${(props) => props.color}, 0.8);\n\tborder: ${(props) => (props.type === 0 ? \"0px solid\" : \"4px solid\")};\n\tborder-bottom-color: rgba(${(props) => props.color}, 0.1);\n\tborder-right-color: rgba(${(props) => props.color}, 1);\n\tborder-top-color: rgba(${(props) => props.color}, 1);\n\tborder-left-color: rgba(${(props) => props.color}, 0.3);\n`;\n","import React from \"react\";\nimport { StyledCell } from \"./Styles/StyledCell\";\nimport { TETROMINOS } from \"../tetrominos\";\n\nconst Cell = ({ type }) => (\n\t<StyledCell type={type} color={TETROMINOS[type].color} />\n);\n\nexport default React.memo(Cell);\n","import React from \"react\";\nimport { StyledStage } from \"./Styles/StyledStage\";\n\nimport Cell from \"./Cell\";\n\nconst Stage = ({ stage }) => (\n\t<StyledStage width={stage[0].length} height={stage.length}>\n\t\t{stage.map((row) =>\n\t\t\trow.map((cell, x) => <Cell key={x} type={cell[0]} />)\n\t\t)}\n\t</StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center; \n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;","import React from \"react\";\nimport { StyledDisplay } from \"./Styles/StyledDisplay\";\nconst Display = ({ gameOver, text }) => {\n\treturn <StyledDisplay>{text}</StyledDisplay>;\n};\n\nexport default Display;\n","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`","import React from \"react\";\nimport { StyledStartButton } from \"./Styles/StyledStartButton\";\nconst StartButton = ({ callback }) => {\n\treturn <StyledStartButton onClick={callback}>Start Game</StyledStartButton>;\n};\n\nexport default StartButton;\n","import React, { useState } from \"react\";\nimport { createStage, checkCollision } from \"../gameHelpers\";\nimport ReactHowler from \"react-howler\";\nimport { StyledTetrisWrapper, StyledTetris } from \"./Styles/StyledTetris\";\nimport soundfile from \"../m.mp3\";\n\n// Custom Hooks\n\nimport { useInterval } from \"../hooks/useInterval\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\n\n// Components\n\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\n\nconst Tetris = () => {\n\tconst [dropTime, setDropTime] = useState(1000);\n\tconst [gameOver, setGameOver] = useState(false);\n\tconst [play, updatePlay] = useState(false);\n\tconst [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n\tconst [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n\tconst [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n\t\trowsCleared\n\t);\n\n\tconst movePlayer = (dir) => {\n\t\tif (!checkCollision(player, stage, { x: dir, y: 0 })) {\n\t\t\tupdatePlayerPos({ x: dir, y: 0 });\n\t\t}\n\t};\n\n\tconst startGame = () => {\n\t\tif (!play) {\n\t\t\tupdatePlay(true);\n\t\t}\n\t\tsetStage(createStage());\n\t\tresetPlayer();\n\t\tsetGameOver(false);\n\t\tsetScore(0);\n\t\tsetRows(0);\n\t\tsetLevel(0);\n\t};\n\n\tconst keyUp = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\tif (keyCode === 40) {\n\t\t\t\tsetDropTime(500 / (level + 1) + 200);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst drop = () => {\n\t\tif (rows > (level + 1) * 10) {\n\t\t\tsetLevel((prev) => prev + 1);\n\t\t}\n\t\tsetDropTime(500 / (level + 1) + 200);\n\t\tif (!checkCollision(player, stage, { x: 0, y: 1 })) {\n\t\t\tupdatePlayerPos({ x: 0, y: 1, collided: false });\n\t\t} else {\n\t\t\t// Game Over\n\t\t\tif (player.pos.y < 1) {\n\t\t\t\tconsole.log(\"GAME OVER!!!\");\n\t\t\t\tsetGameOver(true);\n\t\t\t\tsetDropTime(null);\n\t\t\t\tupdatePlay(false);\n\t\t\t}\n\t\t\tupdatePlayerPos({ x: 0, y: 0, collided: true });\n\t\t}\n\t};\n\n\tconst dropPlayer = () => {\n\t\tsetDropTime(null);\n\t\tdrop();\n\t};\n\n\tconst move = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\tif (keyCode === 37) {\n\t\t\t\tmovePlayer(-1);\n\t\t\t} else if (keyCode === 39) {\n\t\t\t\tmovePlayer(1);\n\t\t\t} else if (keyCode === 40) {\n\t\t\t\tdropPlayer();\n\t\t\t} else if (keyCode === 38) {\n\t\t\t\tplayerRotate(stage, 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tuseInterval(() => {\n\t\tdrop();\n\t}, dropTime);\n\n\treturn (\n\t\t<StyledTetrisWrapper\n\t\t\trole='button'\n\t\t\ttabIndex='0'\n\t\t\tonKeyDown={(e) => move(e)}\n\t\t\tonKeyUp={keyUp}\n\t\t>\n\t\t\t<StyledTetris>\n\t\t\t\t<Stage stage={stage} />\n\t\t\t\t<aside>\n\t\t\t\t\t{gameOver ? (\n\t\t\t\t\t\t<Display gameOver={gameOver} text='Game Over' />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Display text={`Score: ${score}`} />\n\t\t\t\t\t\t\t<Display text={`Rows: ${rows}`} />\n\t\t\t\t\t\t\t<Display text={`Level: ${level}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<StartButton callback={startGame} />\n\t\t\t\t</aside>\n\t\t\t</StyledTetris>\n\t\t\t<ReactHowler src={soundfile} playing={play} />\n\t\t</StyledTetrisWrapper>\n\t);\n};\n\nexport default Tetris;\n","import { useState, useCallback } from \"react\";\n\nimport { TETROMINOS, randomTetromino } from \"../tetrominos\";\nimport { STAGE_WIDTH, checkCollision } from \"../gameHelpers\";\n\nexport const usePlayer = () => {\n\tconst [player, setPlayer] = useState({\n\t\tpos: { x: 0, y: 0 },\n\t\ttetromino: TETROMINOS[0].shape,\n\t\tcollided: false,\n\t});\n\n\tconst rotate = (matrix, dir) => {\n\t\t// Make the rows to become cols (transpose)\n\t\tconst rotatedTetro = matrix.map((_, index) =>\n\t\t\tmatrix.map((col) => col[index])\n\t\t);\n\t\t// Reverse each row to get a rotated matrix\n\t\tif (dir > 0) return rotatedTetro.map((row) => row.reverse());\n\t\treturn rotatedTetro.reverse();\n\t};\n\n\tconst playerRotate = (stage, dir) => {\n\t\tconst clonedPlayer = JSON.parse(JSON.stringify(player));\n\t\tclonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n\t\tconst pos = clonedPlayer.pos.x;\n\t\tlet offset = 1;\n\t\twhile (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n\t\t\tclonedPlayer.pos.x += offset;\n\t\t\toffset = -(offset + (offset > 0 ? 1 : -1));\n\t\t\tif (offset > clonedPlayer.tetromino[0].length) {\n\t\t\t\trotate(clonedPlayer.tetromino, -dir);\n\t\t\t\tclonedPlayer.pos.x = pos;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tsetPlayer(clonedPlayer);\n\t};\n\n\tconst updatePlayerPos = ({ x, y, collided }) => {\n\t\tsetPlayer((prev) => ({\n\t\t\t...prev,\n\t\t\tpos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n\t\t\tcollided,\n\t\t}));\n\t};\n\n\tconst resetPlayer = useCallback(() => {\n\t\tsetPlayer({\n\t\t\tpos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n\t\t\ttetromino: randomTetromino().shape,\n\t\t\tcollided: false,\n\t\t});\n\t}, []);\n\n\treturn [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useState, useEffect, useCallback } from \"react\";\nexport const useGameStatus = (rowsCleared) => {\n\tconst [score, setScore] = useState(0);\n\tconst [rows, setRows] = useState(0);\n\tconst [level, setLevel] = useState(0);\n\tconst linePoints = [40, 100, 300, 1200];\n\tconst calcScore = useCallback(() => {\n\t\tif (rowsCleared > 0) {\n\t\t\tsetScore(\n\t\t\t\t(prev) => prev + linePoints[rowsCleared - 1] * (level + 1)\n\t\t\t);\n\t\t\tsetRows((prev) => prev + rowsCleared);\n\t\t}\n\t}, [level, linePoints, rowsCleared]);\n\tuseEffect(() => {\n\t\tcalcScore();\n\t}, [calcScore, rowsCleared, score]);\n\treturn [score, setScore, rows, setRows, level, setLevel];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport Tetris from \"./conmponents/Tetris\";\nimport \"./App.css\";\nconst App = () => (\n\t<div className='App'>\n\t\t<canvas id='myCanvas' resize></canvas>\n\n\t\t<Tetris />\n\n\t\t<h1>Plsease Use a bigger screen</h1>\n\t</div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}